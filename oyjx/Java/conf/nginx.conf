
#user  nobody;
user	ftp;
worker_processes  2;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;

worker_rlimit_nofile 1024;
events {
	use	epoll;
    worker_connections  1024;
}

# load modules compiled as Dynamic Shared Object (DSO)
#
#dso {
#    load ngx_http_fastcgi_module.so;
#    load ngx_http_rewrite_module.so;
#}

http {
    include       mime.types;
    default_type  application/octet-stream;
    
    include		  proxy.conf;
	log_format yundns_log '$server_name $remote_addr [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent"';
    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

	server_tokens off;
    sendfile        on;
    tcp_nopush     on;
	server_names_hash_bucket_size 256;
    client_header_buffer_size 256k;
    #keepalive_timeout  0;
    large_client_header_buffers 4 256k;
    client_body_buffer_size 256k;
    client_header_timeout     3m;
    client_body_timeout 3m;
    send_timeout             3m;

    client_max_body_size 50m;
    keepalive_timeout  120;

    #gzip  on;
    gzip on;
    gzip_min_length  1k;
    gzip_buffers     4 16k;
    gzip_http_version 1.0;
    gzip_comp_level 2;
    gzip_types       text/plain application/x-javascript text/css application/xml;
    gzip_vary on;

    upstream brcImage{
        server localhost:8081;
    }

    upstream temp1{
        server localhost:8083;
    }

    server {
        listen       80;
        server_name  oyjx.me www.oyjx.me;

        rewrite ^ https://$http_host$request_uri? permanent;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        # location / {
        #    root   html;
        #    index  index.html index.htm;
        # }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
      
	# location / {
        #    index  index.html
	#    proxy_set_header Host $http_host;
	#    proxy_set_header X-Forward-For $remote_addr;
        #    proxy_pass https://temp1;
        # }

        # rewrite ^ https://$http_host$request_uri? permanent;
        
	#location ~ \.(html|js|css|gif|jpg|png)$ {
             # root /usr/local/tomcat7/brc/BrcImage;
        #     root /usr/local/tomcat7/brc/Temp;
    	#}

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
             root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }

    server {
        listen       80;
        #server_name  www.ouyang.jx.cn;
	server_name localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

     #   location / {
     #       root   html;
     #       index  index.html index.htm;
     #   }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #

        location / {
            proxy_set_header Host $http_host;
            proxy_set_header X-Forward-For $remote_addr;
            proxy_pass http://brcImage;
        }

        location ~ \.(html|js|css|gif|jpg|png)$ {
                root /usr/local/tomcat7/brc/BrcImage;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
             root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }

    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    server {
        # 打开 80的监听，上面监听了下列域名的配置就可以注释了
        # listen        80;
        listen        443 ssl;
        server_name   oyjx.me www.oyjx.me;
        #server_name  localhost;

        # ssl                  on;
        ssl_certificate      /usr/local/nginx/ssl/1616278_oyjx.me.pem;
        ssl_certificate_key  /usr/local/nginx/ssl/1616278_oyjx.me.key;

        ssl_session_timeout  5m;

        ssl_protocols  SSLv2 SSLv3 TLSv1;
        ssl_ciphers  HIGH:!aNULL:!MD5;
        # ssl_prefer_server_ciphers   on;

	location / {
	     index index.html
             proxy_set_header Host $http_host;
	     proxy_set_header X-Forward-For $remote_addr;
             # proxy_redirect off;
             proxy_pass http://temp1;
	}

        location ~ \.(html|js|css|gif|jpg|png)$ {
             # root /usr/local/tomcat7/brc/BrcImage;
             root /usr/local/tomcat7/brc/Temp;
    	}

	# location / {
        #    root   html;
        #    index  index.html index.htm;
        # }

    }
    
    include vhost.conf;

}
